{"version":3,"sources":["registerServiceWorker.js","store.js","components/Page.js","containers/Title.js","actions.js","components/Title.js","components/Sprite.js","components/invite/Character.js","components/Invite.js","containers/Invite.js","containers/Home.js","components/Home.js","containers/App.js","models/Character.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","rootReducer","arguments","length","undefined","action","type","Object","objectSpread","currentPage","to","characters","concat","character","components_Page","_ref","children","onClick","react_default","a","createElement","className","connect","dispatch","Sprite","currentFrame","_this2","this","id","setInterval","nextFrame","setState","intervalId","clearInterval","props","frameClass","src","sprite","React","Component","components_invite_Character","title","name","image","alt","Sprite_Sprite","level","ability","Invite","index","handleSwipe","_this","_this$props","lib_default","dots","infinite","speed","afterChange","map","c","key","Button_default","color","variant","style","borderColor","fontFamily","inviteCharacters","inviteCharacter","containers_Title","containers_Invite","containers_Home","master","store","initialState","createStore","configureStore","Character","imageId","spriteId","classCallCheck","Image","getFullBodyImageUrl","getSpriteImageUrl","Math","floor","random","process","construct","toConsumableArray","data","all","ReactDOM","render","es","containers_App","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.075fcedb.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore } from 'redux';\n\nconst rootReducer = (state = {}, action) => {\n  switch(action.type) {\n  case \"CHANGE_PAGE\":\n    return { ...state, currentPage: action.to }\n  case \"INVITE_CHARACTER\":\n    const characters = state.characters.concat(action.character)\n    return { ...state, characters: characters, currentPage: 'Home' }\n  default:\n    return state\n  }\n}\n\nexport default function configureStore(initialState={}) {\n  return createStore(rootReducer, initialState);\n}\n","import React from 'react'\nimport \"./Page.css\"\n\nexport default ({children, onClick}) => {\n  return (\n    <div className=\"PageBackground\" onClick={onClick}>\n      <div className=\"PageBackgroundShadow\">\n        {children}\n      </div>\n    </div>\n  )\n}\n","import { connect } from 'react-redux'\nimport Title from \"../components/Title\"\nimport { changePage } from \"../actions\"\n\nconst mapStateToProps = (state) => {\n  return {}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onClick: () => dispatch(changePage(\"Invite\"))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Title);","export function changePage(to) {\n  return {\n    type: \"CHANGE_PAGE\",\n    to: to\n  }\n}\n\nexport function inviteCharacter(character) {\n  return {\n    type: \"INVITE_CHARACTER\",\n    character: character\n  }\n}\n","import React from 'react';\nimport './Title.css';\nimport Page from './Page';\n\nexport default ({onClick}) => {\n  return (\n    <Page onClick={onClick}>\n      <div className=\"TitleTextContainer\">\n        <h1 className=\"TitleText\">\n          <big>不朽</big>に踊る<br/><big>銀</big>の<big>街</big>\n        </h1>\n      </div>\n      <div className=\"TitleGuideContainer\">\n        <p>画面をタッチしてください</p>\n      </div>\n    </Page>\n  );\n}\n","import \"./Sprite.css\"\nimport React from 'react'\n\nexport default class Sprite extends React.Component {\n  state = { currentFrame: 0 }\n\n  componentDidMount() {\n    const id = window.setInterval(() => {\n      const nextFrame = (this.state.currentFrame + 1) % 48\n      this.setState({currentFrame: nextFrame})\n    }, 100)\n    this.setState({intervalId: id})\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.intervalId)\n  }\n\n  render () {\n    const {character} = this.props\n    const frameClass = `SpriteFrame${this.state.currentFrame}`\n\n    return (\n      <div className=\"SpriteContainer\">\n        <img className={frameClass} src={character.sprite.src}/>\n      </div>\n    )\n  }\n}\n","import \"./Character.css\"\nimport React from 'react'\nimport Sprite from '../Sprite'\n\nexport default ({character, onClick}) => {\n  return (\n    <div className=\"InviteCharacterContainer\" onClick={onClick}>\n      <div className=\"PageHeader\">\n        <h1>{character.title} {character.name}</h1>\n      </div>\n      <img className=\"InviteCharacterImage\"\n           src={character.image.src}\n           alt={character.name}/>\n      <Sprite character={character}/>\n      <div className=\"InviteCharacterParams\">\n        <div className=\"InviteCharacterLV\">Lv. {character.level}</div>\n        <div className=\"InviteCharacterAbility\">{character.ability}</div>\n      </div>\n    </div>\n  )\n}\n","import \"./Invite.css\"\nimport React from 'react'\nimport Slider from \"react-slick\"\nimport Page from './Page'\nimport Character from './invite/Character'\nimport Button from '@material-ui/core/Button'\n\n\nexport default class Invite extends React.Component {\n  state = { index: 0 }\n\n  handleSwipe = (index) => {\n    this.setState({index: index})\n  }\n\n  render () {\n    const {onClick, characters} = this.props\n\n    return (\n      <Page>\n        <div className=\"InviteSlider\">\n          <Slider dots infinite speed={300} afterChange={this.handleSwipe}>\n            { characters.map(c => <Character key={c.id} character={c} /> ) }\n          </Slider>\n        </div>\n\n        <div className=\"InviteGuide\">\n          <Button color=\"inherit\"\n                  variant=\"outlined\"\n                  style={{borderColor: \"#fff\", fontFamily: \"Sawarabi Mincho\"}}\n                  onClick={() => onClick(characters[this.state.index])} >\n            このキャラクターで始める\n          </Button>\n        </div>\n      </Page>\n    )\n  }\n}\n","import { connect } from 'react-redux'\nimport Invite from \"../components/Invite\"\nimport { inviteCharacter } from \"../actions\"\n\nconst mapStateToProps = (state) => {\n  return {\n    characters: state.inviteCharacters\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onClick: (character) => dispatch(inviteCharacter(character))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Invite);\n","import { connect } from 'react-redux'\nimport Home from \"../components/Home\"\n\nconst mapStateToProps = (state) => {\n  return {\n    characters: state.characters\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react'\nimport Page from './Page'\n\nexport default ({characters}) => {\n  const character = characters[0]\n  return (\n    <Page>\n      welcome, {character.name}\n    </Page>\n  )\n}\n","import React from 'react';\nimport Title from '../containers/Title';\nimport Invite from '../containers/Invite';\nimport Home from '../containers/Home';\nimport { connect } from 'react-redux';\n\nconst App = ({currentPage}) => {\n  switch(currentPage) {\n  case \"Title\":\n    return <Title/>\n  case \"Invite\":\n    return <Invite/>\n  case \"Home\":\n    return <Home/>\n  default:\n    return <p>Not Found</p>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentPage: state.currentPage\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const master = [\n  [0, \"逆巻く炎\", \"ミティ\", \"楔形文字の読解\",  \"1056010201\", \"1056010302\"],\n  [1, \"不倒の戦士\", \"アレン\", \"鉄拳\",  \"1396010201\", \"1381010303\"],\n  [2, \"月と波の巫女\", \"オリビエ\", \"オラクル\", \"1169010201\", \"1169010301\"],\n  [3, \"揺蕩うもの\", \"ソルブ\", \"詩吟\",  \"1196010201\", \"1196010301\"]\n]\n\nexport default class Character {\n  constructor(id, title, name, ability, imageId, spriteId) {\n    this.id = id\n    this.title = title\n    this.name = name\n    this.ability = ability\n    this.imageId = imageId\n    this.image = new Image()\n    this.image.src = this.getFullBodyImageUrl()\n    this.spriteId = spriteId\n    this.sprite = new Image()\n    this.sprite.src = this.getSpriteImageUrl()\n    this.level = Math.floor(Math.random()*7) + 3\n  }\n\n  getFullBodyImageUrl() {\n    return `${process.env.PUBLIC_URL}/characters/${this.imageId}.png`\n  }\n\n  getSpriteImageUrl() {\n    return `${process.env.PUBLIC_URL}/characters/${this.spriteId}.png`\n  }\n\n  static create (id) {\n    return new Character(...master[id])\n  }\n\n  static all() {\n    return master.map((data) => new Character(...data))\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport registerServiceWorker from './registerServiceWorker';\nimport configureStore from './store';\nimport './index.css';\nimport App from './containers/App';\nimport Character from './models/Character';\n\nconst store = configureStore({\n  currentPage: \"Title\",\n  characters: [],\n  inviteCharacters: Character.all()\n})\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}